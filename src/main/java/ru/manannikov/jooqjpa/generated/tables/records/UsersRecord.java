/*
 * This file is generated by jOOQ.
 */
package ru.manannikov.jooqjpa.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.manannikov.jooqjpa.generated.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>USERS.USER_ID</code>.
     */
    public void setUserId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>USERS.USER_ID</code>.
     */
    @NotNull
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>USERS.USER_USERNAME</code>.
     */
    public void setUserUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>USERS.USER_USERNAME</code>.
     */
    @NotNull
    @Size(max = 128)
    public String getUserUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>USERS.USER_PASSWORD</code>.
     */
    public void setUserPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>USERS.USER_PASSWORD</code>.
     */
    @NotNull
    @Size(max = 72)
    public String getUserPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>USERS.USER_EMAIL</code>.
     */
    public void setUserEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>USERS.USER_EMAIL</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getUserEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>USERS.USER_LAST_NAME</code>.
     */
    public void setUserLastName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>USERS.USER_LAST_NAME</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUserLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>USERS.USER_FIRST_NAME</code>.
     */
    public void setUserFirstName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>USERS.USER_FIRST_NAME</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getUserFirstName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>USERS.USER_MIDDLE_NAME</code>.
     */
    public void setUserMiddleName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>USERS.USER_MIDDLE_NAME</code>.
     */
    @Size(max = 46)
    public String getUserMiddleName() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID userId, String userUsername, String userPassword, String userEmail, String userLastName, String userFirstName, String userMiddleName) {
        super(Users.USERS);

        setUserId(userId);
        setUserUsername(userUsername);
        setUserPassword(userPassword);
        setUserEmail(userEmail);
        setUserLastName(userLastName);
        setUserFirstName(userFirstName);
        setUserMiddleName(userMiddleName);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(ru.manannikov.jooqjpa.generated.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setUserId(value.getUserId());
            setUserUsername(value.getUserUsername());
            setUserPassword(value.getUserPassword());
            setUserEmail(value.getUserEmail());
            setUserLastName(value.getUserLastName());
            setUserFirstName(value.getUserFirstName());
            setUserMiddleName(value.getUserMiddleName());
            resetChangedOnNotNull();
        }
    }
}
