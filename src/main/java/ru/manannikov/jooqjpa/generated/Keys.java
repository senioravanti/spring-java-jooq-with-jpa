/*
 * This file is generated by jOOQ.
 */
package ru.manannikov.jooqjpa.generated;


import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.manannikov.jooqjpa.generated.tables.Animals;
import ru.manannikov.jooqjpa.generated.tables.Users;
import ru.manannikov.jooqjpa.generated.tables.records.AnimalsRecord;
import ru.manannikov.jooqjpa.generated.tables.records.UsersRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnimalsRecord> CONSTRAINT_F = Internal.createUniqueKey(Animals.ANIMALS, DSL.name("CONSTRAINT_F"), new TableField[] { Animals.ANIMALS.ANIMAL_RUSSIAN_NAME }, true);
    public static final UniqueKey<AnimalsRecord> CONSTRAINT_F7 = Internal.createUniqueKey(Animals.ANIMALS, DSL.name("CONSTRAINT_F7"), new TableField[] { Animals.ANIMALS.ANIMAL_LATIN_NAME }, true);
    public static final UniqueKey<AnimalsRecord> PK_ANIMALS = Internal.createUniqueKey(Animals.ANIMALS, DSL.name("PK_ANIMALS"), new TableField[] { Animals.ANIMALS.ANIMAL_ID }, true);
    public static final UniqueKey<UsersRecord> CONSTRAINT_4 = Internal.createUniqueKey(Users.USERS, DSL.name("CONSTRAINT_4"), new TableField[] { Users.USERS.USER_USERNAME }, true);
    public static final UniqueKey<UsersRecord> CONSTRAINT_4D = Internal.createUniqueKey(Users.USERS, DSL.name("CONSTRAINT_4D"), new TableField[] { Users.USERS.USER_PASSWORD }, true);
    public static final UniqueKey<UsersRecord> CONSTRAINT_4D4 = Internal.createUniqueKey(Users.USERS, DSL.name("CONSTRAINT_4D4"), new TableField[] { Users.USERS.USER_EMAIL }, true);
    public static final UniqueKey<UsersRecord> PK_USERS = Internal.createUniqueKey(Users.USERS, DSL.name("PK_USERS"), new TableField[] { Users.USERS.USER_ID }, true);
}
