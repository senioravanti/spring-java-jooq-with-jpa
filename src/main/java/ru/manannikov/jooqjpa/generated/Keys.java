/*
 * This file is generated by jOOQ.
 */
package ru.manannikov.jooqjpa.generated;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.manannikov.jooqjpa.generated.tables.Animals;
import ru.manannikov.jooqjpa.generated.tables.TaxonomicRankTypes;
import ru.manannikov.jooqjpa.generated.tables.TaxonomicRanks;
import ru.manannikov.jooqjpa.generated.tables.records.AnimalsRecord;
import ru.manannikov.jooqjpa.generated.tables.records.TaxonomicRankTypesRecord;
import ru.manannikov.jooqjpa.generated.tables.records.TaxonomicRanksRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnimalsRecord> CONSTRAINT_F = Internal.createUniqueKey(Animals.ANIMALS, DSL.name("CONSTRAINT_F"), new TableField[] { Animals.ANIMALS.ANIMAL_ID }, true);
    public static final UniqueKey<AnimalsRecord> CONSTRAINT_F7 = Internal.createUniqueKey(Animals.ANIMALS, DSL.name("CONSTRAINT_F7"), new TableField[] { Animals.ANIMALS.ANIMAL_RUSSIAN_NAME }, true);
    public static final UniqueKey<AnimalsRecord> CONSTRAINT_F7B = Internal.createUniqueKey(Animals.ANIMALS, DSL.name("CONSTRAINT_F7B"), new TableField[] { Animals.ANIMALS.ANIMAL_LATIN_NAME }, true);
    public static final UniqueKey<TaxonomicRankTypesRecord> CONSTRAINT_E = Internal.createUniqueKey(TaxonomicRankTypes.TAXONOMIC_RANK_TYPES, DSL.name("CONSTRAINT_E"), new TableField[] { TaxonomicRankTypes.TAXONOMIC_RANK_TYPES.TAXONOMIC_RANK_TYPE_ID }, true);
    public static final UniqueKey<TaxonomicRankTypesRecord> CONSTRAINT_E6 = Internal.createUniqueKey(TaxonomicRankTypes.TAXONOMIC_RANK_TYPES, DSL.name("CONSTRAINT_E6"), new TableField[] { TaxonomicRankTypes.TAXONOMIC_RANK_TYPES.TAXONOMIC_RANK_TYPE_NAME }, true);
    public static final UniqueKey<TaxonomicRanksRecord> CONSTRAINT_A = Internal.createUniqueKey(TaxonomicRanks.TAXONOMIC_RANKS, DSL.name("CONSTRAINT_A"), new TableField[] { TaxonomicRanks.TAXONOMIC_RANKS.TAXONOMIC_RANK_ID }, true);
    public static final UniqueKey<TaxonomicRanksRecord> CONSTRAINT_A9 = Internal.createUniqueKey(TaxonomicRanks.TAXONOMIC_RANKS, DSL.name("CONSTRAINT_A9"), new TableField[] { TaxonomicRanks.TAXONOMIC_RANKS.TAXONOMIC_RANK_NAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AnimalsRecord, TaxonomicRanksRecord> FK_ANIMAL_DESCRIBED_BY_TAXONOMIC_RANK = Internal.createForeignKey(Animals.ANIMALS, DSL.name("FK_ANIMAL_DESCRIBED_BY_TAXONOMIC_RANK"), new TableField[] { Animals.ANIMALS.TAXONOMIC_RANK_ID }, Keys.CONSTRAINT_A, new TableField[] { TaxonomicRanks.TAXONOMIC_RANKS.TAXONOMIC_RANK_ID }, true);
    public static final ForeignKey<TaxonomicRanksRecord, TaxonomicRankTypesRecord> FK_TAXOMIC_RANK_HAS_TYPE = Internal.createForeignKey(TaxonomicRanks.TAXONOMIC_RANKS, DSL.name("FK_TAXOMIC_RANK_HAS_TYPE"), new TableField[] { TaxonomicRanks.TAXONOMIC_RANKS.TAXONOMIC_RANK_TYPE }, Keys.CONSTRAINT_E, new TableField[] { TaxonomicRankTypes.TAXONOMIC_RANK_TYPES.TAXONOMIC_RANK_TYPE_ID }, true);
    public static final ForeignKey<TaxonomicRanksRecord, TaxonomicRanksRecord> FK_TAXOMIC_RANK_LEVEL = Internal.createForeignKey(TaxonomicRanks.TAXONOMIC_RANKS, DSL.name("FK_TAXOMIC_RANK_LEVEL"), new TableField[] { TaxonomicRanks.TAXONOMIC_RANKS.TAXONOMIC_RANK_PARENT_ID }, Keys.CONSTRAINT_A, new TableField[] { TaxonomicRanks.TAXONOMIC_RANKS.TAXONOMIC_RANK_ID }, true);
}
