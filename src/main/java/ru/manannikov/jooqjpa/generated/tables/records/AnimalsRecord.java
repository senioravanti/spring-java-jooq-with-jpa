/*
 * This file is generated by jOOQ.
 */
package ru.manannikov.jooqjpa.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.manannikov.jooqjpa.generated.tables.Animals;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AnimalsRecord extends UpdatableRecordImpl<AnimalsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ANIMALS.ANIMAL_ID</code>.
     */
    public void setAnimalId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_ID</code>.
     */
    public Integer getAnimalId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_RUSSIAN_NAME</code>.
     */
    public void setAnimalRussianName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_RUSSIAN_NAME</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getAnimalRussianName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_LATIN_NAME</code>.
     */
    public void setAnimalLatinName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_LATIN_NAME</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getAnimalLatinName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_CLASS</code>.
     */
    public void setAnimalClass(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_CLASS</code>.
     */
    @NotNull
    @Size(max = 24)
    public String getAnimalClass() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_ORDER</code>.
     */
    public void setAnimalOrder(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_ORDER</code>.
     */
    @NotNull
    @Size(max = 24)
    public String getAnimalOrder() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_FAMILY</code>.
     */
    public void setAnimalFamily(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_FAMILY</code>.
     */
    @NotNull
    @Size(max = 36)
    public String getAnimalFamily() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_GENUS</code>.
     */
    public void setAnimalGenus(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_GENUS</code>.
     */
    @NotNull
    @Size(max = 24)
    public String getAnimalGenus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_SPECIES</code>.
     */
    public void setAnimalSpecies(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_SPECIES</code>.
     */
    @Size(max = 128)
    public String getAnimalSpecies() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_NATURAL_HABITAT</code>.
     */
    public void setAnimalNaturalHabitat(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_NATURAL_HABITAT</code>.
     */
    @Size(max = 2048)
    public String getAnimalNaturalHabitat() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ANIMALS.ANIMAL_IMAGE_URI</code>.
     */
    public void setAnimalImageUri(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>ANIMALS.ANIMAL_IMAGE_URI</code>.
     */
    @Size(max = 128)
    public String getAnimalImageUri() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnimalsRecord
     */
    public AnimalsRecord() {
        super(Animals.ANIMALS);
    }

    /**
     * Create a detached, initialised AnimalsRecord
     */
    public AnimalsRecord(Integer animalId, String animalRussianName, String animalLatinName, String animalClass, String animalOrder, String animalFamily, String animalGenus, String animalSpecies, String animalNaturalHabitat, String animalImageUri) {
        super(Animals.ANIMALS);

        setAnimalId(animalId);
        setAnimalRussianName(animalRussianName);
        setAnimalLatinName(animalLatinName);
        setAnimalClass(animalClass);
        setAnimalOrder(animalOrder);
        setAnimalFamily(animalFamily);
        setAnimalGenus(animalGenus);
        setAnimalSpecies(animalSpecies);
        setAnimalNaturalHabitat(animalNaturalHabitat);
        setAnimalImageUri(animalImageUri);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AnimalsRecord
     */
    public AnimalsRecord(ru.manannikov.jooqjpa.generated.tables.pojos.Animals value) {
        super(Animals.ANIMALS);

        if (value != null) {
            setAnimalId(value.getAnimalId());
            setAnimalRussianName(value.getAnimalRussianName());
            setAnimalLatinName(value.getAnimalLatinName());
            setAnimalClass(value.getAnimalClass());
            setAnimalOrder(value.getAnimalOrder());
            setAnimalFamily(value.getAnimalFamily());
            setAnimalGenus(value.getAnimalGenus());
            setAnimalSpecies(value.getAnimalSpecies());
            setAnimalNaturalHabitat(value.getAnimalNaturalHabitat());
            setAnimalImageUri(value.getAnimalImageUri());
            resetChangedOnNotNull();
        }
    }
}
